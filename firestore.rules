rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Service Categories collection
    match /serviceCategories/{category} {
      allow read: if isAuthenticated();
      // Only allow write if user is authenticated and has admin role (you can implement this later)
      allow write: if isAuthenticated();
    }

    // Taskers collection
    match /taskers/{taskerId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(taskerId);
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 